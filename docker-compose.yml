version: '3'
services:
    nginx:
        image: nginx:alpine
        container_name: nginx
        volumes:
            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./config/etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
        ports:
            - "127.0.0.1:80:80"
            - "127.0.0.1:443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: nanoninja/php-fpm:7.4.10
        container_name: php
        restart: always
        volumes:
            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
            - "./config:/config"
            - "./logs:/logs"
    composer:
        image: composer:latest
        container_name: composer
        user: "1000:1000"
        volumes:
            - "./web/backend:/app"
        command: install
    frontend-dev:
        image: node:14
        container_name: frontend-dev
        working_dir: /app/frontend
        environment:
            - NODE_ENV=development
        volumes:
            - "./web:/app"
        command: sh -c 'echo "Running \`apt-get update\`" &&
                        apt-get update > /dev/null &&
                        echo "Running \`apt-get install inotify-tools expect ruby-full\`" &&
                        apt-get install inotify-tools expect ruby-full -y > /dev/null &&
                        echo "Running \`npm install -g\`" &&
                        npm install -g npm@7 > /dev/null &&
                        echo "Running \`npm install -g webpack webpack-cli wikipeg\`" &&
                        npm install -g webpack webpack-cli wikipeg > /dev/null &&
                        echo "Running \`npm install\`" &&
                        npm install > /dev/null &&
                        echo "Running \`npm run build\`" &&
                        npm run build > /dev/null &&
                        echo "Running \`gem install sass compass\`" &&
                        gem install sass compass > /dev/null &&
                        echo "Frontend dev setup done; watching..." &&
                        ./watch'
                        # tail -F anything'
    mysqldb:
        image: mysql:8
        platform: linux/x86_64
        container_name: mysql
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=website
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        volumes:
            - "./config/etc/phpmyadmin/apache2.conf:/etc/apache2/apache2.conf"
        ports:
            - "127.0.0.1:8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=mysql
        restart: always
        depends_on:
            - mysqldb
