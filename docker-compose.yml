version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./config/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./config/etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: nanoninja/php-fpm:7.4.10
        restart: always
        volumes:
            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
            - "./config:/config"
            - "./logs:/logs"
    composer:
        image: composer:latest
        volumes:
            - "./web/backend:/app"
        command: install
    frontend-dev:
        image: node:15
        working_dir: /app/frontend
        environment:
            - NODE_ENV=development
        volumes:
            - "./web:/app"
        command: sh -c 'npm install webpack webpack-cli wikipeg -g &&
                        npm run build &&
                        apt update &&
                        apt install inotify-tools expect ruby-full -y &&
                        gem install sass compass &&
                        ./watch'
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
