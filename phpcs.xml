<?xml version="1.0"?>
<ruleset name="Custom PHP Format">
	<!--
		When no files/directories are specified on the command line, check these
		files/directories.
	-->
	<file>./web/backend/app</file>
	<file>./web/backend/tests</file>
	<file>./web/backend/bootstrap/bootstrapper.php</file>
	<exclude-pattern>./web/backend/app/*/Grammar\.php</exclude-pattern>

	<!-- Hard-code command line values -->
	<arg name="basepath" value="."/>
	<arg name="report" value="full"/>
	<arg name="colors"/>
	<arg value="s"/>
	<!--<arg value="np"/>-->

	<!--
		If your helper classes need custom autoloading rules that you are
		not able to include in other ways, you can hard-code files to include
		before the ruleset is processed and any sniff classes have been loaded.
		Note that autoload file paths are relative to the ruleset's location.

		This is different to bootstrap files, which are loaded after the ruleset
		has already been processed.
	-->
	<autoload>./web/backend/vendor/autoload.php</autoload>

	<!--
		Include all sniffs in the PSR12 standard except disallowing tabs.
		Can also disallow categories of sniffs, e.g. via name="Squiz.PHP",
		or entire standards via name="Generic"
	-->
	<rule ref="PSR12">
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="PSR12.Files.FileHeader.SpacingInsideBlock"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnNewLine"/>
		<exclude name="PSR12.ControlStructures.ControlStructureSpacing"/>
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis"/>
		<exclude name="PSR2.Methods.MethodDeclaration.Underscore"/>
		<exclude name="PSR1.Classes.ClassDeclaration.MultipleClasses"/>
		<exclude name="PSR1.Files.SideEffects.FoundWithSymbols"/>
		<exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.Indent"/>



		<exclude name="Generic.Files.LineLength.MaxExceeded"/>
		<exclude name="Generic.Commenting.Todo.CommentFound"/>
		<exclude name="Generic.Commenting.Todo.TaskFound"/>
		<!--
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterClose"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose"/>
		<exclude name="PSR12.Files.FileHeader.SpacingAfterBlock"/>
		<exclude name="PSR12.Files.OpenTag.NotAlone"/>
		<exclude name="PSR12.Files.DeclareStatement.SpaceFoundBeforeDirective"/>
		<exclude name="PSR12.Files.DeclareStatement.SpaceFoundAfterDirective"/>
		<exclude name="PSR12.Files.DeclareStatement.SpaceFoundBeforeDirectiveValue"/>
		<exclude name="PSR12.Files.DeclareStatement.SpaceFoundAfterDirectiveValue"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket"/>
		<exclude name="PSR2.Classes.PropertyDeclaration.ScopeMissing"/>
		<exclude name="PSR2.ControlStructures.ControlStructureSpacing.requiredSpacesAfterOpen"/>
		<exclude name="PSR2.ControlStructures.ControlStructureSpacing.requiredSpacesBeforeClose"/>
		<exclude name="Generic.ControlStructures.InlineControlStructure.NotAllowed"/>
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace"/>
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword"/>
		<exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine"/>
		<exclude name="PSR2.Methods.MethodDeclaration.AbstractAfterVisibility"/>
		<exclude name="PSR12.Operators.OperatorSpacing.NoSpaceAfter"/>
		<exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceIndent"/>
		<exclude name="PSR12.Files.ImportStatement.LeadingSlash"/>
		<exclude name="PSR12.Functions.ReturnTypeDeclaration.SpaceBeforeColon"/>
		<exclude name="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody"/>
		<exclude name="PSR2.Files.EndFileNewline.TooMany"/>
		<exclude name="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma"/>
		<exclude name="Generic.PHP.LowerCaseType.ParamTypeFound"/>
		<exclude name="Generic.WhiteSpace.IncrementDecrementSpacing.SpacingAfterIncrement"/>
		<exclude name="Generic.PHP.LowerCaseConstant.Found"/>
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterFunction"/>
		<exclude name="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed"/>
		<exclude name="PSR1.Files.SideEffects.FoundWithSymbols"/>
		<exclude name="Squiz.Scope.MethodScope.Missing"/>
		<exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps"/>
		<exclude name="PSR2.Files.EndFileNewline.NoneFound"/>
		<exclude name="PSR12.Properties.ConstantVisibility.NotFound"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.ContentAfterOpenBracket"/>
		<exclude name="PSR2.Methods.FunctionCallSignature.MultipleArguments"/>
		<exclude name="PSR12.Classes.ClassInstantiation.MissingParentheses"/>
		-->
	</rule>

	<!--
		Include some specific sniffs from the Generic standard.
	-->
	<rule ref="Generic.Commenting.Todo"/>

	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="100"/>
			<property name="absoluteLineLimit" value="100"/>
		</properties>
	</rule>

	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1"/>
			<property name="requiredSpacesBeforeClose" value="1"/>
		</properties>
	</rule>

	<rule ref="PSR2.Methods.FunctionCallSignature">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1"/>
			<property name="requiredSpacesBeforeClose" value="1"/>
		</properties>
	</rule>

	<rule ref="PSR2.ControlStructures.ControlStructureSpacing">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1"/>
			<property name="requiredSpacesBeforeClose" value="1"/>
		</properties>
	</rule>

	<!--
		Boolean values should be specified by using the strings
		"true" and "false" rather than the integers 0 and 1.
	<rule ref="Generic.Formatting.MultipleStatementAlignment">
	<properties>
	<property name="maxPadding" value="8"/>
	<property name="ignoreMultiLine" value="true"/>
	</properties>
	</rule>
	-->

	<!--<rule ref="Generic.PHP.ForbiddenFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="is_null" value="null"/>
				<element key="delete" value="unset"/>
				<element key="sizeof" value="count"/>
				<element key="print" value="echo"/>
				<element key="create_function" value="null"/>
			</property>
		</properties>
	</rule>-->

    <!-- Don't hide tokenizer exceptions -->
    <rule ref="Internal.Tokenizer.Exception">
        <type>error</type>
    </rule>
</ruleset>
